function [carcassdays,usehours,CamID]=getEagleUseHourData(dataoptions)
% getEagleUseHourData - read file to get EagleUseHours
%
%     Syntax:
%     [carcassdays,usehours]=getEagleUseHourData(dataoptions)
% where dataoptions can be
%   'alleaglescomplete'  % both ge and be, complete and incomplete sequences
%   'alleaglesallsightings'  % both ge and be, only complete views
%   'goldeneaglescomplete'  % only golden eagles, only complete views
%
%  J Gerber
%  IonE
%  Nov, 2021

%%%%%%%%%%%%%%%%%%%%%
%    Import Code    %
%%%%%%%%%%%%%%%%%%%%%

persistent EVSPhotoData

if isempty(EVSPhotoData)
    
    GOEAVCMconstantsfile

    
    
    
    % Auto-generated by MATLAB on 28-Oct-2021 11:27:43
    
    %% Set up the Import Options and import the data
    opts = delimitedTextImportOptions("NumVariables", 34);
    
    % Specify range and delimiter
    opts.DataLines = [2, Inf];
    opts.Delimiter = ",";
    
    % Specify column names and types
    opts.VariableNames = ["Reviewer", "StudyArea", "Year", "Camera", "CamID", "CamStartTime", "CamEndTime", "CarcassRemovedbeforeCamEnd", "CarcassLastPhoto", "CarcassAvailTime", "MethodOfRemoval", "CarcassSpecies", "DistanceToRoad", "DistRdRound", "Folder", "Subfolder", "ObsNumber3", "PhotoStart", "Species", "Date", "ArrivalTime", "Weather", "Temperature", "SnowCover", "DepartureTime", "TotTime", "Age", "CompleteSequence", "ReasonForDeparture", "EagleInteractions", "VehiclePresent", "PhotoEnd", "Quality", "Comments"];
    opts.VariableTypes = ["categorical", "categorical", "double", "categorical", "double", "datetime", "datetime", "categorical", "datetime", "string", "string", "categorical", "double", "double", "categorical", "categorical", "double", "double", "categorical", "datetime", "datetime", "categorical", "double", "double", "datetime", "datetime", "categorical", "categorical", "categorical", "double", "categorical", "double", "double", "categorical"];
    
    % Specify file level properties
    opts.ExtraColumnsRule = "ignore";
    opts.EmptyLineRule = "read";
    
    % Specify variable properties
    opts = setvaropts(opts, ["CarcassAvailTime", "MethodOfRemoval"], "WhitespaceRule", "preserve");
    opts = setvaropts(opts, ["Reviewer", "StudyArea", "Camera", "CarcassRemovedbeforeCamEnd", "CarcassAvailTime", "MethodOfRemoval", "CarcassSpecies", "Folder", "Subfolder", "Species", "Weather", "Age", "CompleteSequence", "ReasonForDeparture", "VehiclePresent", "Comments"], "EmptyFieldRule", "auto");
    opts = setvaropts(opts, "CamStartTime", "InputFormat", "MM/dd/yy HH:mm");
    opts = setvaropts(opts, "CamEndTime", "InputFormat", "MM/dd/yy HH:mm");
    opts = setvaropts(opts, "CarcassLastPhoto", "InputFormat", "MM/dd/yy HH:mm");
    opts = setvaropts(opts, "Date", "InputFormat", "MM/dd/yy");
    opts = setvaropts(opts, "ArrivalTime", "InputFormat", "HH:mm:ss");
    opts = setvaropts(opts, "DepartureTime", "InputFormat", "HH:mm:ss");
    opts = setvaropts(opts, "TotTime", "InputFormat", "HH:mm:ss");
    opts = setvaropts(opts, ["Year", "EagleInteractions"], "TrimNonNumeric", true);
    opts = setvaropts(opts, ["Year", "EagleInteractions"], "ThousandsSeparator", ",");
    
    % Import the data
    EVSPhotoData = readtable([EVSPhotoDataBaseDir 'EVSdata/EVSPhotoDataSubset.csv'], opts);
    
    
    % Clear temporary variables
    clear opts
end
%%%%%%%%%%%%%%%%%%%%%
%  End Import Code  %
%%%%%%%%%%%%%%%%%%%%%


% process some of the raw data
CamStartTime=datenum(EVSPhotoData.CamStartTime);
CamID=EVSPhotoData.CamID;
Species=EVSPhotoData.Species;
TotTime=datenum(EVSPhotoData.TotTime);
CamIDlist=unique(CamID);
CalculatedTotTime=EVSPhotoData.DepartureTime-EVSPhotoData.ArrivalTime;


% EagleEventDate
% these are both versions of the date&time that an eagle lands on a
% carcass.
% Date is effectively an integer
% EagleLandTime has a datestamp.
Date=EVSPhotoData.Date;
EagleLandTime=datenum(Date)+datenum(EVSPhotoData.ArrivalTime) - floor(datenum(EVSPhotoData.ArrivalTime));



iige=Species=='Golden Eagle';
iibe=Species=='Bald Eagle';
iiuk=Species=='Unknown';

iiComplete=EVSPhotoData.CompleteSequence=='Yes - captured arrival and departure';


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Select rules for which eagle events to keep  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

switch dataoptions
    case 'alleaglescomplete'
        iiBird=(iige | iibe);
        iiKeepBird=iiComplete & iiBird;   % both ge and be, only complete views
        
    case 'alleaglesallsightings'
        iiBird=(iige | iibe);
        iiKeepBird=iiBird;   % both ge and be, complete and incomplete sequences
        
    case 'goldeneaglescomplete'
        iiBird=(iige );
        iiKeepBird=iiComplete & iiBird;   % both ge and be, only complete views
        
    otherwise
        error('don''t recognize this data option')
end




clear D

count=0;
for jCam=1:numel(CamIDlist)
    
    thisCamID=CamIDlist(jCam);
    
    iiCam=thisCamID==CamID;
    
    % for this camera
    %  how many days were there eagle sightings? [can relate to carcass days]
    %  On each of these days, how many eagle-hours?
    
    DateList=unique(Date(iiKeepBird & iiCam));
    
    if numel(DateList)==0
        disp ([' no adequate events for camera ' int2str(thisCamID)])
    else
        
        for jDate=1:numel(DateList);
            
            
            iiDate=Date==DateList(jDate);
            
            BCInteractionList=find(iiKeepBird & iiDate & iiCam);
            
            
            if numel(BCInteractionList)>0
                CarcassDays=datenum(EagleLandTime(BCInteractionList))-CamStartTime(BCInteractionList);
                
                if  unique(CarcassDays) < 100 & unique(CarcassDays)>0
                    count=count+1;
                    D.CarcassDays(count)=unique(ceil(CarcassDays+0.5));
                    D.EagleHours(count)=hours(sum(CalculatedTotTime(BCInteractionList)));
                    D.CameraID(count)=thisCamID;
                else
                    %disp(['problem with data from camera ' int2str(thisCamID)])
                    
                end
                
                
            end
            
            
        end
    end
end

carcassdays=D.CarcassDays;
    usehours=D.EagleHours;
    CamID=D.CameraID;

